CIVET Release Notes
This document describes the high-level changes made to the civet software from
release to release.  It is cumulative, with the most recent changes listed
first.  The most up-to-date version is in the civet git repository


Version 1.10.0
--------------
Features
 - add --no-email option to civet_run


Version 1.9.3
-------------
Bug Fixes
 - Fix bug warning user of duplicate option override if it appears in the
   pipeline option file and a user option file
 - Fix potential civet_status race condition where it could try to read a
   status.txt file before it is finished being written. Race condition could
   also cause the civet_managed_batch_master process to terminate.
 - Use full path to python for validation and consolidate log scripts,
   path is set in config file. If not set, default to python in path. This
   allows a tool to load a Python modulefile that is not compatible with
   these scripts.


Version 1.9.2
-------------
Bug Fixes
 - Fix bug processing return code of tool's version command (introduced 1.9.1)
 - Fix Python Traceback if tool XML contains multiple file tags with the same
   file id

Features
 - added optional "display_name" attribute for <file>, <filelist>, <dir>,
   <string> tags.  This is not currently used by the civet framework, but can
   be used by other tools. For example, a UI may use this attribute to label
   pipeline parameters in a submission form
 - added optional "file extensions" attribute for <file> and <filelist> tags.
   This is currently ignored by the Civet framework, but could be used to
   check that a user is passing an expected type of file for an input parameter.
   This can also be used to provide user hints in a pipeline submission UI.
   Format should be a JSON list of extensions, e.g., '[".fq" ,".fq.gz"]'


Version 1.9.1
-------------
Bug Fixes
 - check return value of version command in generated batch script

Features
 - added pipeline <description></description> tag
 - added optional pipeline display_name attribute
 - added <option> "type", "description", and "display_name" attributes
 - added "description" attribute for <file>, <filelist>, <dir>, <string> tags
 - added "paired" attribute to <filelist>
 - added configuration option "default_modules" for force certain modules to be
   loaded by all tools
 - warn user if they have duplicate options in an option file
   previously user was not warned and previous value was overwritten
 - added "from_file" attribute for foreach <file> tag -- can read files from
   text file rather than matching filenames in a directory to a pattern


Version 1.9.0
-------------
Features
 - created new "managed batch" runtime -- see documentation for details.


Version 1.8.5
-------------
Bug Fixes
 - If the default output directory was passed as a parameter and marked as
   input, Civet would still create it if it does not exist. Now Civet correctly
   exits after printing an appropriate error message.

Features
 - create wrapped version of parse_XML() to catch parse errors and exit
   automatically (enhances existing wrapper scripts). Old behavior can be
   found by calling _parse_XML()
 - a file can now be based on a filelist passed as input parameter. In this
   case the first file in the filelist is used as the source for the based_on
   file
 - Enhanced recovery for Torque connection errors (unable to open socket errors)
 - added --write-file-summary option to civet_run
  - added --json options to civet_run and civet_status


Version 1.8.4.3
---------------
Bug Fixes
 - allow () to be used as tool command file delimiters


Version 1.8.4.2
---------------
Bug Fixes
 - revert change that prevented validity.py from working with Python 2.7


Version 1.8.4.1
---------------
Bug Fixes
 - input="true" now implies create="false" for <dir> tag


Version 1.8.4
-------------
Bug Fixes
 - fix AttributeError when referencing undefined file within a tool XML
 - allow use of "PIPELINE_ROOT" within tool XML
 - raise a ParseError if a File ID is defined more than once


Version 1.8.3
-------------
Bug Fixes
 - fix bug introduced in 1.8.2 that prevented the epilogue from running
   correctly for the merged remove temp/consolidate logs step


Version 1.8.2
-------------
Bug Fixes
 - <string> tags can now be used in tool xml files
 - epilogue path is set correctly if log_dir and execution_log_dir differ

Features
 - wall_time_ranges_list_long_jobs.py utility now lets user specify the
   minimum walltime to use to classify a job as 'long running'
 - remove temp and consolidate log jobs merged


Version 1.8.1
-------------
Bug fixes
 - Don't strip off relative paths when applying in_dir
 - Allow 'pattern/replace' to be combined with 'append', 'datestamp_append',
   and 'datestamp_prepend' for the <file>, <dir>, and <string> tags.
 - civet_cancel -r was terminating if it found a complete pipeline rather than
   continuing on to process the next pipeline directory
 - <dir> files can now be declared temp in a tool XML

Features
 - New implicitly defined directory ID "PIPELINE_ROOT", contains the path to the
   directory containing the pipeline XML. Can be used to reference supporting
   files installed with the pipeline.
 - Added 'fast recursive' mode to civet_status, when exploring a directory tree
   if a 'logs' directory is found, descend into it and ignore its siblings
 - Added several utility script to extract CPU and memory consumption from a
   Civet log directory for a previously executed pipeline
 - Added script to generate a Graphviz .dot file showing a directed acyclic
   graph of job dependencies from a pipeline's log directory
 - Civet status will now print a list of batch job IDs and their exit status for
   jobs that failed.
 - switched to Markdown documentation
 - adopted Apache 2 license prior to public release


Version 1.8.0
-------------
Bug fixes
 - filespec for output files with relative paths are assumed to be in the
   default output directory, just like filespecs that only contain a filename
 - fix exception in cleanup_command_line() when sys.stdin.encoding is None
 - civet_status retries failed PbsQuery.getjob calls,  we see failures on
   Torque 4 when making large numbers of queries

Features
 - pulled core functionality out of civet_status script and put it into a
   module
 - Added more helpful error messages for XML parsing errors, previously these
   would often generate a AssertionError exception and traceback


Version 1.7.6
-------------
Bug fixes
 - Fix so relative paths in tool_search_path pipeline attribute are treated as
   relative to the XML directory, not the current working directory
 - Unknown file IDs in a pipeline tool tag's inputs="" or outputs="" attribute
   no longer causes a Traceback.  A helpful error message is printed for the
   unknown IDs and the parsing process terminates.
 - Print a more helpful error message if a <dir> tag is missing filespec,
   parameter, based_on, from_file, or pipeline_root

Features
 - Add optional "path" attribute for <pipeline> and <tool> (in tool xml file)
   tags.  These paths will be added to the PATH after loading modulefiles


Version 1.7.5
-------------
Bug fixes
 - abort_pipeline bash function writes status file first, before issuing 
   all of the qdel commands.  This is in case the qdels hang and cause 
   the epilogue to time out.

Features
 - Batch scripts now include as a comment the path to the tool XML file used to
   generate the script.
 - Batch scripts now include #PBS directives for stdout/stderr naming used
   during submission.
 - Log the PATH in the step's 'run log'
 - Reset epilogue.sh permissions before exiting job (if a user changes the
   permissions of epilogue.sh before the pipeline finishes, they could cause
   it to not be executed by Torque)


Version 1.7.4
-------------
Bug fixes
 - Specify filename for torque stderr file, Torque had problems in certain
   cases if we only provide the directory and not filename for stderr.


Version 1.7.3
-------------
Bug fixes
 - civet_status now follows symlinks when scanning for log directories
 - civet_status does not report success if the pipeline_batch_id_list.txt is
   empty, now reports that there was a submission failure
 - Detect conditions where Torque stdout/stderr files will get created with a
   group that the user does not belong to, which prevents the user job epilogue
   from executing.

Features
 - Add new "pipeline_root" attribute for <dir> tag.  If true, Civet will set
   the directory to the pipeline's XML root directory.
 - datestamp_prepend can now be combined with append and datestamp_append tags
 - Use "module purge" command to clear loaded modulefiles rather than  our own
   bash function


Version 1.7.2
-------------
Bug fixes
 - Fix 1.7.x regression that broke <related> files in <foreach>


Version 1.7.1
-------------
Bug fixes
 - Fix bug where job epilogue was not run for the Consolidate Logs job for
   TORQUE systems with "spool_as_final_name true" pbs_mom configuration


Version 1.7.0
-------------
Bug fixes
 - Summary mode of civet_status now indicates terminated pipelines
   (pipelines where one or more job was cancelled or deleted either manually or 
   by the batch system)

Features
 - Pipeline log directory is now included in failure emails
 - Use TORQUE job epilogue to catch termination due to walltime violation and
   provide more useful error messages and logging.
 - Log username in the command_line.txt file
 - Increase limit for maximum number of jobs spawned by foreach
 - Add recursive mode for civet_cancel
 - Add new "from_file" attribute for <dir> tag, will assign the parent
   directory of a file to the <dir> tag
 - Each job that initiates an abort pipeline process now creates its own
   abort.log file (now JOBNAME-abort.log)


Version 1.6.2
-------------
Bug fixes
 - none

Features
 - filelist parameter can now have 'input' attribute.  If true,  each file
   in list will be checked to see if it exists at submit time.


Version 1.6.1
-------------
Bug fixes
 - Fix handling of absolute paths for tool definition files
 - Fix issue with cleanup of <foreach> related> files declared temp 
 - Properly parse option override files with whitespace around the =

Features
 - New pipeline "tool_search_path" attribute, lets you specify colon delimited
   list of directories to search for tool XML files
 - New --walltime-multiplier option to civet_run
 - Added <string> pipeline tag,  can be used similar to <file> but strings are
   not modified (files may be expanded to absolute paths)
 - Don't ssh to head node to send pipeline completion email (was a work around
   for genome cluster config)
 - File lists can now be passed to pipeline as command line parameter (comma
   delimited list)
 - A tool's walltime (specified in tool's XML file) can be overridden by adding 
   tool_config_prefix.walltime=HH:MM:SS as an option override or by using a new
   optional pipeline tool tag attribute called "walltime". 
 - Ability to specify a tool_config_prefix as an attribute in the pipeline tool
   tag.  Takes precedence over tool_config_prefix set in tool XML file.


Version 1.6.0
-------------
Bug fixes
 - Fix exception in abort_submit()
 - Fix civet_status so it doesn't show terminated jobs as canceled
 - Fix bug in filelist in_dir processing
 - Fix exception when referencing inputs and outputs that don't exist in tool
   xml
 - Fix anonymous temp dir creation

Features
 - Add new <version directory=""/> pipeline tag that lets pipeline developer
   specify new output directory naming scheme (to guarantee unique output 
   directory for each run)
 - Add new error_email_address parameter to parse_XML, used by abort_pipeline
   Bash function to email the user when a pipeline is aborted. Also used for 
   batch system abort emails. Can be passed to civet_run with
   --error-email-address option
 - Cleanup some Unicode characters from command line (problem when example
   command lines are copy and pasted from Word Processors or email clients)


Version 1.5.0
-------------
Bug fixes
 - Fix crash for non-zero pbs_deljob return value in civet_cancel 
 - Fix crash when options file contains blank lines

Features
 - Initial <foreach> implementation
 - Delayed job execution (civet_run -d, --delay)
 - Can specify email list for batch notification (civet_run -e, --email-address)
 - Use pipeline tool names instead of name from tool definition file (allows
   multiple instances of same tool in pipeline to have unique names for job and
   file naming)


Version 1.4.2
-------------
Bug fixes
 - Fix crash in civet_status
 - Fix typo in civet_status output
 - Move NFS sync to end of job


Version 1.4.1
-------------
Bug fixes:
 - Fixed problem where tool exit_test_logic was not getting validated properly
 - Fix problem where civet_cancel was not removing queued jobs (only running and
   held jobs were canceled)
 - Use U.S. spelling of "canceled" (vs cancelled)

Features
 - Added optional tool mem attribute, specifies amount of memory in gigabyes
   that will be requested by the generated batch job 
 - Add some #PBS directives to generated batch script for documentation and to
   facilitate running steps manually during testing/debugging
 - Add --keep-temp (-t) option to civet_run. If passed, the delete temp files 
   job will not be submitted to clean up temporary pipeline files.
 - Add --hold option to civet_run. If passed, the holds on pipeline jobs will
   not be released by civet. The jobs will stay held until the user releases
   them.
 - Add civet_release script which will release all user holds on the jobs in a
   Civet pipeline (specified by pipeline log directory) 
 - Add --quiet (-q) option to civet_status. This option only produces a single
   line of output if the status of the pipeline is FAILED, otherwise
   civet_status will be silent
 - Add binary attribute for Tool option. The binary attribute is combined with
   the value attribute and indicates that the value can be true or false. If
   the value is true, the command_text will be used to substitute for the option
   in the command line.  If the value is false then an empty string will be
   substituted for the option in the command line.
 - Add --force-conditional (-f) option to civet_run to force any tool to run
   that is conditional based on its exit_if_exists attribute, for force any 
   command to run that is conditional based on its if_exists or if_not_exists
   attribute


Version 1.4.0
-------------
Bug fixes
 - Fixed a problem in determining the version of civet components.
   Problem also fixed, separately, in similar cga code.

Features
 - Add "exit_if_exists" and "exit_test_logic" attributes to tools
 - Add "if_exists", "if_not_exists" attributes to commands
 - Only add python to the list of modules if it is required to run the validate
   script, and the tool does not already specify a python modulefile
 - Civet version now recorded in generated scripts


Version 1.3.1
-------------
Bug fixes
 - Create submitted_scripts directory with access only by the user running the
    pipeline (mode 600).

Features
 - Added a new bin subdirectory: bin/maintenance_programs.
 - Added a new program wall_time_ranges.py, which returns 
   - Requested
   - Max
   - Average
   - Min
   times for each cluster job in a pipeline.  A single parameter is a directory
   which is walked to find all the log directories contained therein.


Version 1.3.0
-------------
Bug fixes
 - Don't insert a space between an option's command_text and value if 
   command_text ends it either '=' or ':' when generating command line
 - Fix civet_status display of pipelines submitted with --no-submit

Features
 - Implemented "option override"
 - Implemented threads="True" tool options (value is taken from Tool's
   threads attribute)


Version 1.2.1
-------------
Bug fixes
 - Civet did not correctly detect command failures indicated by a non-
   zero return status.

This is a bug-fix-only release, and contains no new features.


Version 1.2.0
-------------
Bug fixes
 - Fix incorrect Torque error code -> error string mappings. Had to implement 
   our own lookup, since pbs_python had old (Torque 2.X) mappings

Features
 - Enhanced exception handling for job submission errors (users no longer
   see a stack trace when there is a Torque error, instead they simply 
   see a helpful error message) 
 - Modify parse_XML to allow an optional colon separated list of directories
   to search for XML tool definition files. The civet_run command now will 
   pass the contents of the CIVET_PATH environment variable as this parameter.
 - Add new syntax for explicitly declaring the default output directory,
   <dir ... default_output="True" ... />  If not specified, the current
   working directory is used.
   Previously the default output directory was implicitly specified as the
   first directory tag in the XML that wasn't marked as input="True". This
   promised to be error prone and complicate future maintenance.
 - Add a new file to the logs directory named command_line.txt, which contains
   the current working directory when the civet pipeline was invoked, and the
   entire invoking pipeline command line.
 - The version string management was proving to be error prone when cutting new
   versions.  Updated the version reporting to leverage git capabilities.  
   Version is now obtained from git, rather than being hardcoded.


Version 1.1.0
-------------
Bug fixes
 - Fix problem creating directories when create="False" was specified.
   Sometimes this attribute was ignored. Reported by Anu.
   
Features
 - Enhanced civet_status:
    - default is now an abbreviated status listing
    - the --verbose option now outputs the original job-by-job status
    - the --recursive (short form -r) option searches the specified tree for 
      log directories and outputs status for each one found
 - Mail is now sent to the submitting user at the end of each run.
 - In the event of a cancelled or aborted pipeline run, the user only receives
   one email, not one per cancelled / aborted cluster job.

Features added that are not used by cga pipelines:
  - For pipeline implementers: add civet_run option --no-submit (short form -n)
    ability to generate scripts but not actually submit them to the cluster


Version 1.0.0
-------------
Initial production release
